
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'todsdev'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'todsdev'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

# run hooks
on-run-start:
    - "create table if not exists alb_audit (event_name varchar(100), event_timestamp timestamp, event_schema varchar(100), event_model varchar(100) )"
on-run-end:
#    - 'grant usage on schema "{{ target.schema }}" to db_reader'
#    - 'grant select on all tables in schema "{{ target.schema }}" to db_reader'
#
models:
  todsdev:
      # Applies to all files under models/example/
 
    pre-hook: "insert into  alb_audit (event_name, event_timestamp, event_schema, event_model) values ( 'starting model deployment', to_timestamp_ntz(current_timestamp), '{{this.schema}}', '{{this.name}}')"
    post-hook: "insert into alb_audit (event_name, event_timestamp, event_schema, event_model) values ( 'completed model deployment', to_timestamp_ntz(current_timestamp), '{{this.schema}}', '{{this.name}}')"
    
seeds:    
  todsdev:
 
    enabled: true
    # This configures data/alb_country_codes.csv
    alb_country_codes:
    
      # Override column types
      column_types:
        country_cd: varchar(2)
        country_name: varchar(32)
        
        
 #  pre-hook: "insert into  alb_audit (event_name, event_timestamp, event_schema, event_model) values ( 'starting import data', to_timestamp_ntz(current_timestamp), 'ss', 'bb')"
 #  post-hook: "insert into alb_audit (event_name, event_timestamp, event_schema, event_model) values ( 'completed import data', to_timestamp_ntz(current_timestamp), 'ss', 'bb')"

        